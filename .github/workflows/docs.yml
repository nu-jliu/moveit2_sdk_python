name: Build and Deploy Docs

on:
  push:
    branches:
      - main  # Or your default branch

permissions:
  contents: write # Allow write access to deploy to gh-pages

jobs:
  build-and-deploy:
    runs-on: ubuntu-22.04
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          path: ${{ github.workspace }}

      - name: Set up Python
        uses: actions/setup-python@v3
        with:
          python-version: '3.10' # Or the version your project uses



      - name: Setup locale
        run: |
          locale  # check for UTF-8

          sudo apt update
          sudo apt install locales -y
          sudo locale-gen en_US en_US.UTF-8
          sudo update-locale LC_ALL=en_US.UTF-8 LANG=en_US.UTF-8
          export LANG=en_US.UTF-8

          locale  # verify settings

      - name: Add universe repo
        run: |
          sudo apt install software-properties-common -y
          sudo add-apt-repository universe

      - name: Add ros key
        run: |
          sudo apt update
          sudo apt install curl -y
          export ROS_APT_SOURCE_VERSION=$(curl -s https://api.github.com/repos/ros-infrastructure/ros-apt-source/releases/latest | grep -F "tag_name" | awk -F\" '{print $4}')
          curl -L -o /tmp/ros2-apt-source.deb "https://github.com/ros-infrastructure/ros-apt-source/releases/download/${ROS_APT_SOURCE_VERSION}/ros2-apt-source_${ROS_APT_SOURCE_VERSION}.$(. /etc/os-release && echo $VERSION_CODENAME)_all.deb" # If using Ubuntu derivates use $UBUNTU_CODENAME
          sudo apt install /tmp/ros2-apt-source.deb

      - name: Upgrade machine
        run: |
          sudo apt update
          sudo apt upgrade -y

      - name: Install ROS2 humble
        run: |
          sudo apt install ros-humble-desktop-full -y
          sudo apt install ros-dev-tools -y
          sudo apt install ros-humble-moveit* ros-humble-nav2*

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          # Change to package directory to find docs-requirements.txt
          cd ${{ github.workspace }}
          if [ -f docs-requirements.txt ]; then
            pip install -r docs-requirements.txt;
          else
            # Pin versions to match local development
            pip install 'sphinx>=8.0,<9.0' sphinx-rtd-theme m2r2;
          fi
          # If you have a general requirements.txt, you might still want to install it:
          # if [ -f requirements.txt ]; then pip install -r requirements.txt; fi

      - name: Build Sphinx documentation
        run: |
          cd ${{ github.workspace }}
          # Install the package in development mode so Sphinx can find the modules
          cd docs
          sphinx-build -b html . _build/html -v

      - name: Deploy to GitHub Pages
        uses: peaceiris/actions-gh-pages@v4
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          publish_dir: ${{ github.workspace }}/docs/_build/html
          # Optional: specify a custom domain if you have one
          # cname: docs.example.com
